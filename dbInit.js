const Sequelize = require('sequelize');

const sequelize = new Sequelize('database', 'username', 'password', {
	host: 'localhost',
	dialect: 'sqlite',
	logging: false,
	storage: 'database.sqlite',
});

require('./models/Game')(sequelize, Sequelize.DataTypes);
require('./models/GamePlayers')(sequelize, Sequelize.DataTypes);
require('./models/Player')(sequelize, Sequelize.DataTypes);
require('./models/PlayerCharacters')(sequelize, Sequelize.DataTypes);
const AbilityValues = require('./models/Abilities')(sequelize, Sequelize.DataTypes);
require('./models/Character')(sequelize, Sequelize.DataTypes);
require('./models/CharacterAbilities')(sequelize, Sequelize.DataTypes);
const BrokenBodiesValues = require('./models/BrokenBodies')(sequelize, Sequelize.DataTypes);
const HabitValues = require('./models/Habits')(sequelize, Sequelize.DataTypes);
const InnateValues = require('./models/Innate')(sequelize, Sequelize.DataTypes);
const OriginValues = require('./models/Origin')(sequelize, Sequelize.DataTypes);
const TaleValues = require('./models/Tales')(sequelize, Sequelize.DataTypes);
const TraitValues = require('./models/Traits')(sequelize, Sequelize.DataTypes);
const SpecialisationValues = require('./models/Specialisation')(sequelize, Sequelize.DataTypes);
const ClassValues = require('./models/Class')(sequelize, Sequelize.DataTypes);
const MiseryValues = require('./models/Misery')(sequelize, Sequelize.DataTypes);
const ItemValues = require('./models/Item')(sequelize, Sequelize.DataTypes);
const ScrollValues = require('./models/Scroll')(sequelize, Sequelize.DataTypes);
const ArmourValues = require('./models/Armour')(sequelize, Sequelize.DataTypes);
const WeaponValues = require('./models/Weapon')(sequelize, Sequelize.DataTypes);
const NameValues = require('./models/Name')(sequelize, Sequelize.DataTypes);
const Inventory = require('./models/Inventory')(sequelize, Sequelize.DataTypes);
const CharacterSpecialisation = require('./models/CharacterSpecialisation')(sequelize, Sequelize.DataTypes);
const CharacterWeapons = require('./models/CharacterWeapon')(sequelize, Sequelize.DataTypes);
const CharacterArmour = require('./models/CharacterArmour')(sequelize, Sequelize.DataTypes);

const force = process.argv.includes('--force') || process.argv.includes('-f');

sequelize.sync({ force }).then(async () => {
	const seedVals = [
        //abilities
		AbilityValues.upsert({ name: 'Agility', tag: 'AGI'}),
		AbilityValues.upsert({ name: 'Presence', tag: 'PRE'}),
        AbilityValues.upsert({ name: 'Strength', tag: 'STR'}),
        AbilityValues.upsert({ name: 'Toughness', tag: 'TOU'}),
        //Broken bodies
        BrokenBodiesValues.upsert({ roll: 1, name: 'Staring, manic gaze.'}),
        BrokenBodiesValues.upsert({ roll: 2, name: 'Covered in (for some) blasphemous tattoos.'}),
        BrokenBodiesValues.upsert({ roll: 3, name: 'Rotting face. Wears a mask.'}),
        BrokenBodiesValues.upsert({ roll: 4, name: 'Lost three toes, limps.'}),
        BrokenBodiesValues.upsert({ roll: 5, name: 'Starved: gaunt and pale.'}),
        BrokenBodiesValues.upsert({ roll: 6, name: 'One hand replaced with rusting hook (d6 damage).'}),
        BrokenBodiesValues.upsert({ roll: 7, name: 'Decaying teeth.'}),
        BrokenBodiesValues.upsert({ roll: 8, name: 'Hauntingly beautiful, unnervingly clean.'}),
        BrokenBodiesValues.upsert({ roll: 9, name: 'Hands caked with sores.'}),
        BrokenBodiesValues.upsert({ roll: 10, name: 'Cataract slowly but surely spreading in both eyes.'}),
        BrokenBodiesValues.upsert({ roll: 11, name: 'Long tangled hair, at least one cockroach in residence.'}),
        BrokenBodiesValues.upsert({ roll: 12, name: 'Broken, crushed ears.'}),
        BrokenBodiesValues.upsert({ roll: 13, name: 'Juddering and stuttering from nerve damage or stress.'}),
        BrokenBodiesValues.upsert({ roll: 14, name: 'Corpulent, ravenous, drooling.'}),
        BrokenBodiesValues.upsert({ roll: 15, name: 'One hand lacks thumb and index finger, grips like a lobster.'}),
        BrokenBodiesValues.upsert({ roll: 16, name: 'Red, swollen alcoholic\'s nose.'}),
        BrokenBodiesValues.upsert({ roll: 17, name: 'Resting maniac face, making friends is hard.'}),
        BrokenBodiesValues.upsert({ roll: 18, name: 'Chronic athlete\'s foot. Stinks.'}),
        BrokenBodiesValues.upsert({ roll: 19, name: 'Recently slashed and stinking eye covered with a patch.'}),
        BrokenBodiesValues.upsert({ roll: 20, name: 'Nails cracked and black, maybe about to drop off.'}),
        //Bad Habits
        HabitValues.upsert({ roll: 1, name: 'Obsessively collect small sharp stones.'}),
        HabitValues.upsert({ roll: 2, name: 'Won\'t use a blade without testing it on your own flesh. Arms knitted with scars.'}),
        HabitValues.upsert({ roll: 3, name: 'Can\'t stop drinking once you start.'}),
        HabitValues.upsert({ roll: 4, name: 'Gambling addict. Must bet every day. If you lose, raise and bet again.'}),
        HabitValues.upsert({ roll: 5, name: 'Cannot tolerate criticism of any kind. Results in rage and weeping.'}),
        HabitValues.upsert({ roll: 6, name: 'Unable to get to the point. Have never actually finished a story.'}),
        HabitValues.upsert({ roll: 7, name: 'Best friend is a skull. Carry it with you, tell it everything, you trust no one more.'}),
        HabitValues.upsert({ roll: 8, name: 'You pick your nose so deep it bleeds.'}),
        HabitValues.upsert({ roll: 9, name: 'Laugh hysterically at your own jokes, which you then explain in detail.'}),
        HabitValues.upsert({ roll: 10, name: 'A nihilist. You insist on telling everyone you are a nihilist and explaining why.'}),
        HabitValues.upsert({ roll: 11, name: 'Inveterate bug eater.'}),
        HabitValues.upsert({ roll: 12, name: 'Stress response is aestethic display. The worse things get, the fancier you need to be.'}),
        HabitValues.upsert({ roll: 13, name: 'Permanent phlegm deposit in throat. Continuously cough, snort, spit and swallow.'}),
        HabitValues.upsert({ roll: 14, name: 'Pyromaniac.'}),
        HabitValues.upsert({ roll: 15, name: 'Consistently lose important items and forget vital facts.'}),
        HabitValues.upsert({ roll: 16, name: 'Insecure shit-stirrer. Will talk about whoever just left the room.'}),
        HabitValues.upsert({ roll: 17, name: 'You stutter when lying.'}),
        HabitValues.upsert({ roll: 18, name: 'You giggle insanely at the worst possible times.'}),
        HabitValues.upsert({ roll: 19, name: 'You whistle when trying to hide. You will deny this. Whistle when 5, 7, 9, 11 or 13 is rolled on a d20.'}),
        HabitValues.upsert({ roll: 20, name: 'You make jewelry from the teeth of the dead. If this can be considered a bad habit.'}),
        //Terrible Traits
        TraitValues.upsert({ roll: 1, name: 'Endlessly aggravated.'}),
        TraitValues.upsert({ roll: 2, name: 'Inferiority complex.'}),
        TraitValues.upsert({ roll: 3, name: 'Problems with authority.'}),
        TraitValues.upsert({ roll: 4, name: 'Loud mouth.'}),
        TraitValues.upsert({ roll: 5, name: 'Cruel.'}),
        TraitValues.upsert({ roll: 6, name: 'Egocentric.'}),
        TraitValues.upsert({ roll: 7, name: 'Nihilistic.'}),
        TraitValues.upsert({ roll: 8, name: 'Prone to substance abuse.'}),
        TraitValues.upsert({ roll: 9, name: 'Conflicted.'}),
        TraitValues.upsert({ roll: 10, name: 'Shrewd.'}),
        TraitValues.upsert({ roll: 11, name: 'Vindictive.'}),
        TraitValues.upsert({ roll: 12, name: 'Cowardly.'}),
        TraitValues.upsert({ roll: 13, name: 'Lazy.'}),
        TraitValues.upsert({ roll: 14, name: 'Suspicious.'}),
        TraitValues.upsert({ roll: 15, name: 'Ruthless.'}),
        TraitValues.upsert({ roll: 16, name: 'Worried.'}),
        TraitValues.upsert({ roll: 17, name: 'Bitter.'}),
        TraitValues.upsert({ roll: 18, name: 'Deceitful.'}),
        TraitValues.upsert({ roll: 19, name: 'Wasteful.'}),
        TraitValues.upsert({ roll: 20, name: 'Arrogant.'}),
        //Troubling Tales
        TaleValues.upsert({ roll: 1, name: 'Pursued for manslaughter. There is a bounty.'}),
        TaleValues.upsert({ roll: 2, name: 'In massive debt. The debt is being traded to successively more ruthless groups.'}),
        TaleValues.upsert({ roll: 3, name: 'Have a rare, sought after item.'}),
        TaleValues.upsert({ roll: 4, name: 'Have a cursed never-healing wound.'}),
        TaleValues.upsert({ roll: 5, name: 'Had an illegal, immoral and secret affair with a member of the royal family. Has proof.'}),
        TaleValues.upsert({ roll: 6, name: 'Escaped cult member. Terrified and paranoid. Other cultists are everywhere.'}),
        TaleValues.upsert({ roll: 7, name: 'An identity thief who recently killed and replaced this person.'}),
        TaleValues.upsert({ roll: 8, name: 'Banished and disowned for unspecified deeds. Can never go home.'}),
        TaleValues.upsert({ roll: 9, name: 'Deserted military after witnessing a massacre, bounty on head. Hunted by former friends.'}),
        TaleValues.upsert({ roll: 10, name: 'Very recently murdered a close relative. _Very recently_.'}),
        TaleValues.upsert({ roll: 11, name: 'A puzzle cube has been calibrated incorrectly (or has it?), awakening a slumbering abomination.'}),
        TaleValues.upsert({ roll: 12, name: 'Evil creatures love the scent of your spoor and are drawn to it, bringing disaster in your wake.'}),
        TaleValues.upsert({ roll: 13, name: 'A battle wound left a shard of metal slowly inching closer to your heart. Every day there is a 2% chance it reaches it.'}),
        TaleValues.upsert({ roll: 14, name: 'Violence forced you into the wilderness. You think waving trees are whispering. You talk to, scream at, attack trees.'}),
        TaleValues.upsert({ roll: 15, name: 'Cursed to share the nightmares of others, you sleep far, far away.'}),
        TaleValues.upsert({ roll: 16, name: 'At permanent war with all corvids. No contact without some violence. You carry a sling.'}),
        TaleValues.upsert({ roll: 17, name: 'After dreaming of an underground temple to a forgotten god you understand the songs of insects and worms.'}),
        TaleValues.upsert({ roll: 18, name: 'Being tracked and observed by a golem after an agreement which you know has been wiped from your mind.'}),
        TaleValues.upsert({ roll: 19, name: '\'Burn or be burned\' is the fate you accept.'}),
        TaleValues.upsert({ roll: 20, name: 'Your flesh heals twice as fast, but your companions twice as slow. You see a many-eyed \'guardian angel\.'}),
        //Classes
        ClassValues.upsert(
            {
                name: 'Fanged Deserter',
                roll: 1,
                description: 'You have thirty or so friends who never let you down: YOUR TEETH. Disloyal, deranged or simply uncontrollable, any group that didn\'t boot you out you left anyway. But your parliament of teeth - enormous, protruding, sharp - have always been your allies.',
                strength_gen_modifier: 2,
                presence_gen_modifier: -1,
                agility_gen_modifier: -1,
                toughness_gen_modifier: 0,
                omen_dice: 2, 
                hit_dice: 10,
                starting_silver_d6_quantity: 2,
                weapon_dice: 10,
                armour_dice: 4,
                origin_dice: 6,
                origin_description: 'Your earliest memory: ',
                specialisation_rolls: 1
            }),
            ClassValues.upsert(
                {
                    name: 'Gutterborn Scum',
                    roll: 2,
                    description: 'An ill star smiled upon your birth. Poverty, crime and bad parenting didn\'t help either. In your community an honest day\'s work was never an option. Not that you ever tried, what are you, some kind of mug? A razor blade and a moonless night are worth a week of chump-work.',
                    strength_gen_modifier: -2,
                    presence_gen_modifier: 0,
                    agility_gen_modifier: 0,
                    toughness_gen_modifier: 0,
                    omen_dice: 2, 
                    hit_dice: 6,
                    starting_silver_d6_quantity: 1,
                    weapon_dice: 6,
                    armour_dice: 2,
                    origin_dice: 6,
                    origin_description: 'Bad birth: ',
                    specialisation_rolls: 1
                }),
                ClassValues.upsert(
                    {
                        name: 'Esoteric Hermit',
                        roll: 3,
                        description: 'The stone of your cave is one with the stars. Silence and perfection. Now the chaos of a fallen world disturbs your rituals and the caul of night grows blacker than your cavern\'s gloom. Irritating!',
                        strength_gen_modifier: -2,
                        presence_gen_modifier: 2,
                        agility_gen_modifier: 0,
                        toughness_gen_modifier: 0,
                        omen_dice: 4, 
                        hit_dice: 4,
                        starting_silver_d6_quantity: 1,
                        weapon_dice: 4,
                        armour_dice: 2,
                        origin_dice: 6,
                        origin_description: 'Eldritch origin: ',
                        specialisation_rolls: 1
                    }),
                    ClassValues.upsert(
                        {
                            name: 'Wretched Royalty',
                            roll: 4,
                            description: 'Bowed down only by the memories of your lost glory, you could never submit to anyone else. Not you, of noble blood! Not that you expect any of these peons to understand the depths of your sorrow.',
                            strength_gen_modifier: 0,
                            presence_gen_modifier: 0,
                            agility_gen_modifier: 0,
                            toughness_gen_modifier: 0,
                            omen_dice: 2, 
                            hit_dice: 6,
                            starting_silver_d6_quantity: 4,
                            weapon_dice: 8,
                            armour_dice: 3,
                            origin_dice: 6,
                            origin_description: 'Things were going well, until ',
                            specialisation_rolls: 2
                        }),
                        ClassValues.upsert(
                            {
                                name: 'Heretical Priest',
                                roll: 5,
                                description: 'Hunted by the **Two-Headed Basilisks** of the One True Faith, this heretic can be found raving in ruins, traipsing endlessly down dusty roads and desecrating cathedrals by night.',
                                strength_gen_modifier: -2,
                                presence_gen_modifier: 2,
                                agility_gen_modifier: 0,
                                toughness_gen_modifier: 0,
                                omen_dice: 4, 
                                hit_dice: 8,
                                starting_silver_d6_quantity: 3,
                                weapon_dice: 8,
                                armour_dice: 4,
                                origin_dice: 6,
                                origin_description: 'Unholy origins: ',
                                specialisation_rolls: 1
                            }),
                            ClassValues.upsert(
                                {
                                    name: 'Occult Herbmaster',
                                    roll: 6,
                                    description: 'Born of the mushroom, raised in the glade, watched by the eye of the moon in a silverback pool.',
                                    strength_gen_modifier: -2,
                                    presence_gen_modifier: 0,
                                    agility_gen_modifier: 0,
                                    toughness_gen_modifier: 2,
                                    omen_dice: 2, 
                                    hit_dice: 6,
                                    starting_silver_d6_quantity: 2,
                                    weapon_dice: 6,
                                    armour_dice: 2,
                                    origin_dice: 8,
                                    origin_description: 'Probably raised in ',
                                    specialisation_rolls: 0
                                }),
    //miseries
    MiseryValues.upsert({ psalm_number: 11, psalm_text: '1:1 The city shall be made hollow. Of those who rest in hollowness, they shall not be seen.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 12, psalm_text: '1:2 And the earth shall shake and be riven. And from the cracks shall rise a poisonous mist, and in ten days it will shroud the world.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 13, psalm_text: '1:3 Of those that build mightily, so shall they fall, stone by stone.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 14, psalm_text: '1:4 And the depths of the underworld shall bring forth flying spectres and crawling beasts. In their passing the worm grows fat, and the vulture weary.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 15, psalm_text: '1:5 Doubt is crowned. The loyal shall turn their blades on those who silver gave.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 16, psalm_text: '1:6 And blood-cough shall spread like fire across the wastelands of the drought.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 21, psalm_text: '2:1 As at the beginning, so at the end, all manner of fly and wasp shall fill the air.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 22, psalm_text: '2:2 And the ground pale with maggots.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 23, psalm_text: '2:3 And from the Spears: a frost. Born from Bergen Chrypt and covering all.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 24, psalm_text: '2:4 And in ten days and one the writings of sorcerors will be made pale as air.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 25, psalm_text: '2:5 And glass shall become quartz.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 26, psalm_text: '2:6 And SHE shall see HIM grow stronger, and SHE reveals herself and all shall be slain.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 31, psalm_text: '3:1 At Graven-Tosk the soil shall grow warm and those who rest be made to walk.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 32, psalm_text: '3:2 In the heart of Sarkash fog and dusk shall breathe beneath the waking trees. That which was hewed by man shall now hew in its turn.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 33, psalm_text: '3:3 And hunger shall come among you. You shall dig roots and pull children from the breast. The gaunt shall prey upon the gaunt.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 34, psalm_text: '3:4 The great shall be made poor and the poor poorer still.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 35, psalm_text: '3:5 Then shall come rain undending and the day shall be made night by its coming.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 36, psalm_text: '3:6 Brother shall slay Brother and Sister poison Sister.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 41, psalm_text: '4:1 For five days and five nights mothers flesh shall be the cloak of demons.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 42, psalm_text: '4:2 And for five days and five nights shall fathers weep.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 43, psalm_text: '4:3 Look to the West. Forth comes fire, and a horde, and the Kingdoms burn.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 44, psalm_text: '4:4 The liar Arkh shall make knots of the hearts of men, sundering the strongest of bonds.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 45, psalm_text: '4:5 Behold now the Endless Sea, where Leviathan causes waves to be as mountains.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 46, psalm_text: '4:6 And Leviathan shall come among you. Children winter-born and fated to fall before snow, both shall take. ', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 51, psalm_text: '5:1 The lake and brook shall blacken and become tar.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 52, psalm_text: '5:2 The trees shall wither, shrivel and die.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 53, psalm_text: '5:3 And birds shall fall dead from the sky.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 54, psalm_text: '5:4 In one night all those not yet of seven years and seven days shall pass. Born and unborn. And dawn shall give them life as eaters of men.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 55, psalm_text: '5:5 The sky shall weep fire and a great stone shall plummet as a city fallen from heaven.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 56, psalm_text: '5:6 And the last King and the last Queen shall wither to dust. Their wretched courts are devoured by wolves.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 61, psalm_text: '6:1 You shall know the last day is come. The sun shall set and never rise.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 62, psalm_text: '6:2 And day shall be as night and night as day. You shall not sleep, neither shall you wake.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 63, psalm_text: '6:3 Anthelia shall have her will and drink all colour from the world.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 64, psalm_text: '6:4 Those who walk on two legs shall be nameless as the beasts of the field.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 65, psalm_text: '6:5 The earth shall vein, bringing black serpents forth from within the earth.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 66, psalm_text: '6:6 And the unnamed enter the earth pssing through the Veil as it is sundered by Daejmon, the left underling of Nechrubel.', ends_world: 0}),
    MiseryValues.upsert({ psalm_number: 77, psalm_text: '7:7 All praise Yetsabu-Nech, the underworld\'s nightmare, and the black disk which stands before the sun! All praise Verhu, beaming with delight! All praise the fire which burns all! And the darkness shall swallow the darkness.', ends_world: 1}),
    //Items (so fucking many)
    ItemValues.upsert({ name: 'Backpack', flavour_text: 'Holds 7 normal-sized items', value: 6, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 1, starter_roll: 3, is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Bear trap', flavour_text: 'Presence DR14 to spot, d8 damage', value: 20, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 9, is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Blanket', flavour_text: '', value: 4, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Bomb', flavour_text: 'Sealed bottle, d10 damage', value: 0, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 10,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Caltrops', flavour_text: 'd4 damage + infection on 1 in 6', value: 7, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Chalk', flavour_text: '', value: 1, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Chewing tobacco', flavour_text: '', value: 1, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Crowbar', flavour_text: 'd4 damage', value: 8, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 10,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Crucifix, silver', flavour_text: '', value: 60, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 12,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Crucifix, wood', flavour_text: '', value: 8, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Donkey', flavour_text: 'Not bad', value: 10, size: 'Large', class_affinity: 0, class_roll: 0, starter_table: 1, starter_roll: 6,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Dried food', flavour_text: '1 day', value: 1, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Exquisite perfume', flavour_text: '', value: 25, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 5,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Firesteel', flavour_text: '', value: 4, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Grappling hook', flavour_text: '', value: 12, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 8,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Hammer', flavour_text: '', value: 8, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Heavy chain', flavour_text: '15 feet', value: 10, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 7,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Iron nails', flavour_text: '10 nails', value: 5, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Ladder', flavour_text: '', value: 7, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Lantern', flavour_text: '', value: 10, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 3,  is_scroll: 0, custom_flavour_text: 1}),
    ItemValues.upsert({ name: 'Lantern oil', flavour_text: 'Presence + 6 hours', value: 5, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 1}),
    ItemValues.upsert({ name: 'Lard', flavour_text: 'May function as 5 meals in a pinch', value: 5, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 11,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Large iron hook', flavour_text: '', value: 9, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Life elixir', flavour_text: 'd4 doses (heals d6 HP and removes infection)', value: 0, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 1,  is_scroll: 0, custom_flavour_text: 1}),
    ItemValues.upsert({ name: 'Lockpicks', flavour_text: '', value: 5, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 8,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Magnesium strip', flavour_text: '', value: 4, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 4,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Manacles', flavour_text: '', value: 10, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Mattress', flavour_text: '', value: 3, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Meat cleaver', flavour_text: '', value: 15, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Medicine box', flavour_text: 'Stops bleeding/infection and +d6 HP. Presence + 4 uses', value: 15, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 7,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Metal file', flavour_text: '', value: 10, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 8,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Mirror', flavour_text: '', value: 15, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Monkeys', flavour_text: 'Ignore you but love you (d4 + 2HP, punch/bite d4)', value: 0, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 4,  is_scroll: 0, custom_flavour_text: 1}),
    ItemValues.upsert({ name: 'Muzzle', flavour_text: '', value: 6, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Necklace', flavour_text: 'Made from 49 human teeth.', value: 0, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Noose', flavour_text: '', value: 5, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Oil lamp', flavour_text: '', value: 10, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Poison (black)', flavour_text: 'Toughness DR14 or d6 damage + blind for one hour. 3 doses', value: 20, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Poison (red)', flavour_text: 'Toughness DR12 or d10 damage. 3 doses', value: 20, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 11,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Preserved corpse', flavour_text: '', value: 66, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Rope', flavour_text: '30 feet', value: 4, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 1,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Small wagon', flavour_text: '', value: 25, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 1, starter_roll: 5,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Tent', flavour_text: '', value: 12, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 12,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Toolbox', flavour_text: '10 nails, hammer, small saw, tongs', value: 20, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 6,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Torch', flavour_text: '', value: 2, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 2,  is_scroll: 0, custom_flavour_text: 1}),
    ItemValues.upsert({ name: 'Sack', flavour_text: 'Holds 10 normal sized items', value: 5, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 1, starter_roll: 4,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Salt', flavour_text: '', value: 4, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Skull', flavour_text: 'Your best friend and confidant.', value: 0, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Scissors', flavour_text: '', value: 9, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Scroll', flavour_text: 'Worth roughly 50s to the right buyer', value: 0, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Sharp needle', flavour_text: '', value: 3, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 6,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Shield', flavour_text: '-1 HP damage or have the shield break to ignore one attack', value: 20, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 9,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Small but vicious dog', flavour_text: 'd6 + 2 HP, d4, only obeys you', value: 0, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 3,  is_scroll: 0, custom_flavour_text: 1}),
    ItemValues.upsert({ name: 'Waterskin', flavour_text: '4 days of water', value: 4, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 0, starter_roll: 0,  is_scroll: 0, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Unclean scroll', flavour_text: '', value: 0, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 2, starter_roll: 5,  is_scroll: 1, custom_flavour_text: 0}),
    ItemValues.upsert({ name: 'Sacred scroll', flavour_text: '', value: 0, size: 'Normal', class_affinity: 0, class_roll: 0, starter_table: 3, starter_roll: 2,  is_scroll: 1, custom_flavour_text: 0}),
    //scrolls
    ScrollValues.upsert({name: 'Palms Open the Southern Gate', effect: 'A ball of fire hits d2 cratures dealing d8 damage per creature.', scroll_type: 'Unclean', roll: 1}),
    ScrollValues.upsert({name: 'Tongue of Eris', effect: 'A creature of your choice is confused for 10 minutes.', scroll_type: 'Unclean', roll: 2}),
    ScrollValues.upsert({name: 'Te-le-kin-esis', effect: 'Move an object up to d10x10 feet for d6 minutes.', scroll_type: 'Unclean', roll: 3}),
    ScrollValues.upsert({name: 'Lucy-fires Levitation', effect: 'Hover for Presence + d10 rounds.', scroll_type: 'Unclean', roll: 4}),
    ScrollValues.upsert({name: 'Daemon of Capillaries', effect: 'One creature suffocates for d6 rounds, losing d4 HP per round.', scroll_type: 'Unclean', roll: 5}),
    ScrollValues.upsert({name: 'Nine Violet Signs Unknot the Storm', effect: 'Produce d2 lightning bolts dealing d6 damage each.', scroll_type: 'Unclean', roll: 6}),
    ScrollValues.upsert({name: 'Metzhuotl Blind Your Eye', effect: 'A creature becomes invisible for d6 rounds or until it is damaged, attacking/defending with DR6.', scroll_type: 'Unclean', roll: 7}),
    ScrollValues.upsert({name: 'Foul Psychopomp', effect: 'Summon (d6): 1-3 d4 skeletons, 4-6 d4 zombies.', scroll_type: 'Unclean', roll: 8}),
    ScrollValues.upsert({name: 'Eyelid Blinds the Mind', effect: 'd4 creatures fall asleep for one hour unless they succeed a DR14 test.', scroll_type: 'Unclean', roll: 9}),
    ScrollValues.upsert({name: 'Death', effect: 'All creatures within 30 feet lose a total of 4d10 HP.', scroll_type: 'Unclean', roll: 10}),
    ScrollValues.upsert({name: 'Grace of a Dead Saint', effect: 'd2 creatures regain d10 HP each.', scroll_type: 'Sacred', roll: 1}),
    ScrollValues.upsert({name: 'Grace for a Sinner', effect: 'A creature of your choice get s+d6 on one roll (damage, test etc.)', scroll_type: 'Sacred', roll: 2}),
    ScrollValues.upsert({name: 'Whispers Pass the Gate', effect: 'Ask three questions to a deceased creature.', scroll_type: 'Sacred', roll: 3}),
    ScrollValues.upsert({name: 'Aegis of Sorrow', effect: 'A creature of your choice gains 2d6 extra HP for 10 rounds.', scroll_type: 'Sacred', roll: 4}),
    ScrollValues.upsert({name: 'Unmet Fate', effect: 'One creature, dead for no more than a week, is awakened with terrible memories.', scroll_type: 'Sacred', roll: 5}),
    ScrollValues.upsert({name: 'Bestial Speech', effect: 'You may speak with animals for d20 minutes.', scroll_type: 'Sacred', roll: 6}),
    ScrollValues.upsert({name: 'False Dawn/Night\'s Chariot', effect: 'Light or pitch black for 3d10 minutes.', scroll_type: 'Sacred', roll: 7}),
    ScrollValues.upsert({name: 'Hermetic Step', effect: 'You find all traps in your path for 2d10 minutes.', scroll_type: 'Sacred', roll: 8}),
    ScrollValues.upsert({name: 'Roskoe\'s Consuming Glare', effect: 'd4 creatures lose d8 HP each.', scroll_type: 'Sacred', roll: 9}),
    ScrollValues.upsert({name: 'Enochian Syntac', effect: 'One creature blindly obeys a single command.', scroll_type: 'Sacred', roll: 10}),
    //armour
    ArmourValues.upsert({tier: 0, name: 'No armour', damage_modifier_dice: 0, defence_modifier: 0, agility_test_modifier: 0, roll: 1, value: 0}),
    ArmourValues.upsert({tier: 1, name: 'Light armour', damage_modifier_dice: 2, defence_modifier: 0, agility_test_modifier: 0, roll: 2, value: 20}),
    ArmourValues.upsert({tier: 2, name: 'Medium armour', damage_modifier_dice: 4, defence_modifier: 2, agility_test_modifier: 2, roll: 3, value: 100}),
    ArmourValues.upsert({tier: 3, name: 'Heavy armour', damage_modifier_dice: 6, defence_modifier: 2, agility_test_modifier: 4, roll: 4, value: 200}),
    //weapon
    WeaponValues.upsert({name: 'Battle axe', roll: 0, damage_dice: 8, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 35, is_ranged: 0}),
    WeaponValues.upsert({name: 'Bow', roll: 7, damage_dice: 6, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 25, is_ranged: 1}),
    WeaponValues.upsert({name: 'Club', roll: 0, damage_dice: 6, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 10, is_ranged: 0}),
    WeaponValues.upsert({name: 'Crossbow', roll: 9, damage_dice: 8, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 40, is_ranged: 1}),
    WeaponValues.upsert({name: 'Flail', roll: 8, damage_dice: 8, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 35, is_ranged: 0}),
    WeaponValues.upsert({name: 'Femur', roll: 1, damage_dice: 4, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 0, is_ranged: 0}),
    WeaponValues.upsert({name: 'Handaxe', roll: 0, damage_dice: 6, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 15, is_ranged: 0}),
    WeaponValues.upsert({name: 'Knife', roll: 4, damage_dice: 4, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 10, is_ranged: 0}),
    WeaponValues.upsert({name: 'Mace', roll: 0, damage_dice: 6, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 25, is_ranged: 0}),
    WeaponValues.upsert({name: 'Shortbow', roll: 0, damage_dice: 4, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 13, is_ranged: 0}),
    WeaponValues.upsert({name: 'Shortsword', roll: 3, damage_dice: 4, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 20, is_ranged: 0}),
    WeaponValues.upsert({name: 'Sling', roll: 0, damage_dice: 4, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 8, is_ranged: 0}),
    WeaponValues.upsert({name: 'Staff', roll: 2, damage_dice: 4, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 5, is_ranged: 0}),
    WeaponValues.upsert({name: 'Sword', roll: 6, damage_dice: 6, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 30, is_ranged: 0}),
    WeaponValues.upsert({name: 'Warhammer', roll: 5, damage_dice: 6, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 30, is_ranged: 0}),
    WeaponValues.upsert({name: 'Whip', roll: 0, damage_dice: 2, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 5, is_ranged: 0}),
    WeaponValues.upsert({name: 'Zweihander', roll: 10, damage_dice: 10, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 60, is_ranged: 0}),
    WeaponValues.upsert({name: 'Smelly Scimitar', roll: 0, damage_dice: 6, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: -2, defence_dr_modifier: -2, value: 0, is_ranged: 0}),
    WeaponValues.upsert({name: 'Horseshoe', roll: 0, damage_dice: 4, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: -2, defence_dr_modifier: 0, value: 0, is_ranged: 1}),
    WeaponValues.upsert({name: 'Ancestral Blade', roll: 0, damage_dice: 6, damage_dice_number: 1, damage_modifier: 1, attack_dr_modifier: -2, defence_dr_modifier: -2, value: 0, is_ranged: 0}),
    WeaponValues.upsert({name: 'Eurekia', roll: 0, damage_dice: 6, damage_dice_number: 2, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 0, is_ranged: 0}),
    WeaponValues.upsert({name: 'Silk-wrapped Dagger', roll: 0, damage_dice: 4, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 0, is_ranged: 0}),
    WeaponValues.upsert({name: 'Sacred crook', roll: 0, damage_dice: 4, damage_dice_number: 2, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 0, is_ranged: 0}),
    WeaponValues.upsert({name: 'Sigurd\'s Sling', roll: 0, damage_dice: 4, damage_dice_number: 2, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 0, is_ranged: 1}),
    WeaponValues.upsert({name: 'bare hands', roll: 0, damage_dice: 2, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: 0, defence_dr_modifier: 0, value: 0, is_ranged: 0}),
    WeaponValues.upsert({name: 'Bite', roll: 0, damage_dice: 6, damage_dice_number: 1, damage_modifier: 0, attack_dr_modifier: -2, defence_dr_modifier: 0, value: 0, is_ranged: 0}),
    //origins
    OriginValues.upsert({class_roll: 1, roll: 1, description: 'A burnt-black building in Sarkash. Your home?'}),
    OriginValues.upsert({class_roll: 1, roll: 2, description: 'A derelict rotting ship rolling endlessly across a grey sea.'}),
    OriginValues.upsert({class_roll: 1, roll: 3, description: 'A brothel in Schleswig. Quite a friendly environment.'}),
    OriginValues.upsert({class_roll: 1, roll: 4, description: 'Sleeping with dogs in the corner of an inn, waiting for someone to return.'}),
    OriginValues.upsert({class_roll: 1, roll: 5, description: 'Following an army in eastern Wastland.'}),
    OriginValues.upsert({class_roll: 1, roll: 6, description: 'Suckling a wolf in the wild of Bergen Chrypt.'}),
    OriginValues.upsert({class_roll: 2, roll: 1, description: 'Dumped onto a moving shit-cart still in your birth caul.'}),
    OriginValues.upsert({class_roll: 2, roll: 2, description: 'Mother hanged from a tree outside of Galgenbeck, you fell from the corpse.'}),
    OriginValues.upsert({class_roll: 2, roll: 3, description: 'Raised by rats in the gutters of Grift.'}),
    OriginValues.upsert({class_roll: 2, roll: 4, description: 'Kicked and beaten beneath a baker\'s table in Schleswig.'}),
    OriginValues.upsert({class_roll: 2, roll: 5, description: 'Escaped the Tvelandian orphanarium.'}),
    OriginValues.upsert({class_roll: 2, roll: 6, description: 'Educated by outlaws in a hovel south of Allians.'}),
    OriginValues.upsert({class_roll: 3, roll: 1, description: 'Awakening, adult, in a ritual circle underneath the northern bridge to Grift.'}),
    OriginValues.upsert({class_roll: 3, roll: 2, description: 'Wandered, memoryless, from the mouth of a cavern at the cliffs of Terion.'}),
    OriginValues.upsert({class_roll: 3, roll: 3, description: 'Single child survivor of an incident in the Valley of the Unfortunate Undead.'}),
    OriginValues.upsert({class_roll: 3, roll: 4, description: 'Dying of plague in a Bergen Chrypt hovel, you touched something from outside.'}),
    OriginValues.upsert({class_roll: 3, roll: 5, description: 'An average individual until you encountered something in a dim glade in Sarkash.'}),
    OriginValues.upsert({class_roll: 3, roll: 6, description: 'Raised on a lonely island in Lake Onda. No one else has ever heard of this island and you can\'t return.'}),
    OriginValues.upsert({class_roll: 4, roll: 1, description: 'your Wastland palace was reduced to rubble.'}),
    OriginValues.upsert({class_roll: 4, roll: 2, description: 'your caravan kingdom of Tveland fell into penury.'}),
    OriginValues.upsert({class_roll: 4, roll: 3, description: 'King Fathmu\'s brother Zigmund, your father, was murdered.'}),
    OriginValues.upsert({class_roll: 4, roll: 4, description: 'the southern empire of Sudglans sank into the sea.'}),
    OriginValues.upsert({class_roll: 4, roll: 5, description: 'Anthelia demanded a gift of noble blood.'}),
    OriginValues.upsert({class_roll: 4, roll: 6, description: 'two young princes were kidnapped west of Bergen Chrypt and disappeared into the black crevasse of the eastern slopes.'}),
    OriginValues.upsert({class_roll: 5, roll: 1, description: 'Galgenbeck, near the cathedral of the Two-Headed Basilisks.'}),
    OriginValues.upsert({class_roll: 5, roll: 2, description: 'Massacred Allians cult, sole survivor.'}),
    OriginValues.upsert({class_roll: 5, roll: 3, description: 'The crypts of Grift.'}),
    OriginValues.upsert({class_roll: 5, roll: 4, description: 'Temple ruins in the Valley of the Unfortunate Undead.'}),
    OriginValues.upsert({class_roll: 5, roll: 5, description: 'One of the many Graven-Tosk thief-tunnels.'}),
    OriginValues.upsert({class_roll: 5, roll: 6, description: 'Secret Bergen Chrypt church.'}),
    OriginValues.upsert({class_roll: 6, roll: 1, description: 'calm isolation in the Sarkash dark.'}),
    OriginValues.upsert({class_roll: 6, roll: 2, description: 'calm isolation in the Sarkash dark.'}),
    OriginValues.upsert({class_roll: 6, roll: 3, description: 'calm isolation in the Sarkash dark.'}),
    OriginValues.upsert({class_roll: 6, roll: 4, description: 'the illegal midnight markets of Schleswig.'}),
    OriginValues.upsert({class_roll: 6, roll: 5, description: 'the heretic isle of Crelut, two nautical miles east of Grift.'}),
    OriginValues.upsert({class_roll: 6, roll: 6, description: 'the old frozen ruins not far from Allians.'}),
    OriginValues.upsert({class_roll: 6, roll: 7, description: 'a little witches cottage in Galgenbeck.'}),
    OriginValues.upsert({class_roll: 6, roll: 8, description: 'the ruins of the Shadow King\'s manse, thick with memories of mushrooms and smoke.'}),
    //innates
    InnateValues.upsert({class_roll: 1, order: 1, name: 'Bite attack', description: 'DR10 to attack, d6 damage. You must be close to your target. 1-2 on d6 chance the enemy gets a free attack.'}),
    InnateValues.upsert({class_roll: 1, order: 2, name: 'Clumsy', description: 'Normal Agility tests are DR14 instead of DR12, excluding defence.'}),
    InnateValues.upsert({class_roll: 1, order: 3, name: 'Illiterate', description: 'You are incapable of understanding scrolls.'}),
    InnateValues.upsert({class_roll: 2, order: 1, name: 'Stealthy', description: 'All Presence and Agility tests have their DR reduced by 2.'}),
    InnateValues.upsert({class_roll: 2, order: 2, name: 'Specialities', description: 'The first time you get better, you gain another speciality. You can reroll one or both of these from the second time you get better.'}),
    InnateValues.upsert({class_roll: 5, order: 1, name: 'Insightful', description: 'You may use Powers while wearing medium armour.'}),
    InnateValues.upsert({class_roll: 6, order: 1, name: 'Portable Laboratory', description: 'You carry a portable laboratory and continually search for frequently expended ingredients. Daily you have the ingredients to create two randomly determined decoctions and can brew a total of d4 doses. If unused they lose vitality after 24 hours.'}),
    InnateValues.upsert({class_roll: 6, order: 2, name: 'Decoctions', description: '1: **Red Poison** Toughness DR14 or -d10 HP.\n2: **Ezumiel\'s Vapour** Pass a DR14 test or severe (and arguably fun) hallucinations for d4 hours.\n3: **Southern Frog Stew** Vomit for d4 hours, pass a DR14 test or you can do nothing else.\n4: **Elixir Vitalis** Heals d6 HP and stops infections. Can be habit-forming.\n5: **Spider-owl Soup** See in darkness, climb on walls for 30 minutes.\n6: **Fernor\'s Philtre** Translucent oil, must be dabbed right into the eye. Heals infection and gives +2 Presence tests for d4 hours.\n7: **Hyphos\' Enervating Snuff** Beserk! Two attacks per round but defend with DR14. Lasts one fight, causes sneezing.\n8: **Black Poison** Toughness DR14 or -d6 HP and blinded for one hour.'}),
    //specialisations
    SpecialisationValues.upsert({name: 'Crumpled Monster Mask', description: 'Strikes primitive fear into lesser creatures like goblins, gnoums and children. While worn, they check morale every round.', class_roll: 1, roll: 1}),
    SpecialisationValues.upsert({name: 'The Brown Scimitar of Galgenbeck', description: 'A stinking sword you pulled from a military shit-ditch. d6 damage. DR10 attack and defence while you wield it. 1 in 6 chance a wounded enemy is smitten with potent sepsis, dying in 10 minutes.', class_roll: 1, roll: 2}),
    SpecialisationValues.upsert({name: 'Wizard Teeth', description: 'Four weird teeth rattle within a blackened pouch. Before battle roll a d6 for every one. For every 6, one of your attacks deals maximum damage.', class_roll: 1, roll: 3}),
    SpecialisationValues.upsert({name: 'Old Sigurd\'s sling', description: 'Sigurd was the strongest man whose throat you ever gnawed. Woven from his long grey hair, this sling has never failed you. 2d4 damage, requires fist-sized rocks which, perhaps regrettably, are everywhere.', class_roll: 1, roll: 4}),
    SpecialisationValues.upsert({name: 'Ancient Gore-Hound', description: 'Asthmatic, deluded and on its last legs, this wizened creature still has a superb nose and can sniffle up treasure in the most disgusting debris. Attacks with DR10 (bite d6). Devends with DR12, 10HP. Becomes frenzied around goblins and beserkers.', class_roll: 1, roll: 5}),
    SpecialisationValues.upsert({name: 'The Shoe of Death\'s Horse', description: 'It looks normal but since finding it in an obscure crypt you are convinced this shoe came from the horse of Death himself. In your hands it hits with DR10, d4 damage. 1 in 6 chance the shoe smashes the skull, instantly killing small-to-medium sized creatures. The shoe returns to your hand like a boomerang.', class_roll: 1, roll: 6}),
    SpecialisationValues.upsert({name: 'Coward\'s Jab', description: 'When attacking by surprise test Agility DR10. On a success you automatically hit once with a light one-handed weapon, dealing normal damage + 3.', class_roll: 2, roll: 1}),
    SpecialisationValues.upsert({name: 'Filthy Fingersmith', description: 'Your snaky little digits get into pockets and pick locks with a DR8 Agility test. You also begin with lockpicks!', class_roll: 2, roll: 2}),
    SpecialisationValues.upsert({name: 'Abominable Gob Lobber', description: 'Your phlegm is viscous, lumpy, vile and ballistically accurate at short range. You can spit d2 times during a fight. Roll a DR8 Presence test for accuracy. Targets are blinded, retching and vomiting for d4 rounds. Anyone witnessing this - friend or foe - must make a Toughness test to not also vomit. PCs test DR10 and enemies DR12.', class_roll: 2, roll: 3}),
    SpecialisationValues.upsert({name: 'Escaping Fate', description: 'Every time you use an omen there is a 50% chance it is not spent.', class_roll: 2, roll: 4}),
    SpecialisationValues.upsert({name: 'Excretal Stealth', description: 'You have an astounding, almost preternatural ability to hide in muck, debris and filth. When hidden in these conditions a DR16 Presence test is required to notice you.', class_roll: 2, roll: 5}),
    SpecialisationValues.upsert({name: 'Dodging Death', description: 'You are so unpleasant, irrelevant disgusting and vile even Death would rather avoid you if it can. On death, if there is even the slightest possibility that you survived, there is a 50% chance that you did. If successful, after 10 rounds you pop back up with d4 HP and an unlikely explanation of your escape.', class_roll: 2, roll: 6}),
    SpecialisationValues.upsert({name: 'Master of Fate', description: 'What use are maps when the subtance of causality itself is open to you? You know the right way with a d8 Presence test.', class_roll: 3, roll: 1}),
    SpecialisationValues.upsert({name: 'A Book of Boiling Blood', description: 'You may open and read from this book once a day. Your enemy must make a DR12 test to prevent this. If they fail, d2 Beserker-slayers appear from the depths of a forgotten dimension of blood. Roll a d6. On a 1-4 these creatures fight alongside you. On a 5-6 they turn on you, attempting to kill you and destroy the book. After the battle they return to their imprisonment.', class_roll: 3, roll: 2}),
    SpecialisationValues.upsert({name: 'Speaker of Truths', description: 'Twice per day use your wisdom, knowledge advice and inner calm to bring clarity to a creature of your choice. The DR of the next test they undertake is lowered by 4.', class_roll: 3, roll: 3}),
    SpecialisationValues.upsert({name: 'Initiate of the Invisible College', description: 'Once per day you can summon d2 scrolls, whose power can only be used once. Roll a d4, on a 1-2 the scrolls are sacred, on a 3-4, unclean. If the scrolls are not used before sunrise they turn to ash.', class_roll: 3, roll: 4}),
    SpecialisationValues.upsert({name: 'Bard of the Undying', description: 'You learnt your melodies in the Otherworld. The music of your Harp gives +d4 on reaction rolls.', class_roll: 3, roll: 5}),
    SpecialisationValues.upsert({name: 'Hawk as Weapon', description: 'Your crafty almost-intelligent hawk is loyal only to you. Even without shared language, you understand its cries as it keeps watch, scouts and swoops to attack foes. Attacks/defence DR10 (claws/bite d4), HP 8.', class_roll: 3, roll: 6}),
    SpecialisationValues.upsert({name: 'The Blade of your Ancestors', description: 'This magnificent and clearly magical talking sword is foppish, unreliable and quietly despises you. It taunts your failures and, if continually disappointed, develops a 1 in 6 chance to \'accidentally\' attack you or your companions. Deals d6+1 damage. Attack/Defence DR is 10.', class_roll: 4, roll: 1}),
    SpecialisationValues.upsert({name: '\'Poltroon\' the Court Jester', description: 'While practically useless, personally irritating and an emotional drain, Poltroon\'s capering actually makes enemies lose their focus in combat. For the first two rounds you and your allies get +2 on attack/defence.', class_roll: 4, roll: 2}),
    SpecialisationValues.upsert({name: 'Barbarister the Incredible Horse', description: 'Barbarister is magical, intelligent, arrogant and vain. He can also talk. If you can persuade him to care, Barbarister occasionally adds +2 to Presence tests involving logic and intellect. The horse may be smarter than you and is quite aware of this.', class_roll: 4, roll: 3}),
    SpecialisationValues.upsert({name: 'Hamfund the Squire', description: 'This intensely cowardly servant acts only as guardian for the scabbard of the cursed sword **EUREKIA**. Once per combat, if Ham can be found, Eurekia may be drawn. The sword does 2d6 damage, and for every swing of Eurekia roll a d6. On a 1 the squire is slain and Eurekia vanishes forever.', class_roll: 4, roll: 4}),
    SpecialisationValues.upsert({name: 'The Snake-skin Gift', description: 'An expensive sandalwood box bound in snakeskin. It contains a seemingly ordinary dagger, wrapped in silk. The dagger does d4 damage but on a 1 the target dies immediately of deadly poison weeping from the blade.', class_roll: 4, roll: 5}),
    SpecialisationValues.upsert({name: 'Horn of the Schleswig Lords!', description: 'Once per day release a blare from this dented old trumpet and test Presence DR12. One creature may make their next non-combat test an automatic success.', class_roll: 4, roll: 6}),
    SpecialisationValues.upsert({name: 'Sacred shepherd\'s crook', description: 'Its head a hook of human bone inscribed with overlapping anti-prayers. This crook hooks through other worlds. Staff does 2d4 damage except to faithless humans.', class_roll: 5, roll: 1}),
    SpecialisationValues.upsert({name: 'Stolen Mitre', description: 'While wearing this holy hat the priest\'s vile body fades, becoming hard to hit in combat (Defence DR10). If pulled over the ears outside of battle the priest becomes nearly invisible, testing stealth against DR8.', class_roll: 5, roll: 2}),
    SpecialisationValues.upsert({name: 'List of Sins', description: 'A long and accurate document cross-referenced against reality to discover unseen evil-doers. Successful Presence DR10: A strange light surrounds evil creatures. The list\'s owner defends with +2 against any being discovered this way.', class_roll: 5, roll: 3}),
    SpecialisationValues.upsert({name: 'The Blasphemous Nechrubel Bible', description: 'So intensely blasphemous that even the Priests themselves can only peruse it once per day. When read, roll a die. \nEven result: For the rest of the day PCs heal d4 HP after ust five minutes of rest. \nOdd result: The priest is plagued by hallucinations. The DM may invent d3 things that only the Priest can see and describe them to the player as if true. This effect ends with sunrise.', class_roll: 5, roll: 4}),
    SpecialisationValues.upsert({name: 'Stones taken from Thel-Emas\' Lost Temple', description: 'Cast the stones on the ground. Their pattern reveals if danger lurks in an adjacent room. **The stones can lie.** The Priest tests Presence DR10 to see if they are true but after failing they cannot test again until the sun has set.', class_roll: 5, roll: 5}),
    SpecialisationValues.upsert({name: '(WRONG JESUS) Crucifix', description: 'The crucifix can be used in encounters with the undead as well as lesser trolls and goblins. Check morale (add or subtract the priest\'s Presence modifier) to see if the creatures bow and kindly remove themselves.', class_roll: 5, roll: 6}),
   //names
   NameValues.upsert({ roll_one: 1, roll_two: 1, name: 'Aerg-Tval'}),
   NameValues.upsert({ roll_one: 1, roll_two: 2, name: 'Agn'}),
   NameValues.upsert({ roll_one: 1, roll_two: 3, name: 'Arvant'}),
   NameValues.upsert({ roll_one: 1, roll_two: 4, name: 'Belsum'}),
   NameValues.upsert({ roll_one: 1, roll_two: 5, name: 'Belum'}),
   NameValues.upsert({ roll_one: 1, roll_two: 6, name: 'Brint'}),
   NameValues.upsert({ roll_one: 1, roll_two: 7, name: 'Börda'}),
   NameValues.upsert({ roll_one: 1, roll_two: 8, name: 'Daeru'}),
   NameValues.upsert({ roll_one: 2, roll_two: 1, name: 'Eldar'}),
   NameValues.upsert({ roll_one: 2, roll_two: 2, name: 'Felban'}),
   NameValues.upsert({ roll_one: 2, roll_two: 3, name: 'Gotven'}),
   NameValues.upsert({ roll_one: 2, roll_two: 4, name: 'Graft'}),
   NameValues.upsert({ roll_one: 2, roll_two: 5, name: 'Grin'}),
   NameValues.upsert({ roll_one: 2, roll_two: 6, name: 'Grittr'}),
   NameValues.upsert({ roll_one: 2, roll_two: 7, name: 'Haerü'}),
   NameValues.upsert({ roll_one: 2, roll_two: 8, name: 'Hargha'}),
   NameValues.upsert({ roll_one: 3, roll_two: 1, name: 'Harmug'}),
   NameValues.upsert({ roll_one: 3, roll_two: 2, name: 'Jotna'}),
   NameValues.upsert({ roll_one: 3, roll_two: 3, name: 'Karg'}),
   NameValues.upsert({ roll_one: 3, roll_two: 4, name: 'Karva'}),
   NameValues.upsert({ roll_one: 3, roll_two: 5, name: 'Katla'}),
   NameValues.upsert({ roll_one: 3, roll_two: 6, name: 'Keftar'}),
   NameValues.upsert({ roll_one: 3, roll_two: 7, name: 'Klort'}),
   NameValues.upsert({ roll_one: 3, roll_two: 8, name: 'Kratar'}),
   NameValues.upsert({ roll_one: 4, roll_two: 1, name: 'Kutz'}),
   NameValues.upsert({ roll_one: 4, roll_two: 2, name: 'Kvetin'}),
   NameValues.upsert({ roll_one: 4, roll_two: 3, name: 'Lygan'}),
   NameValues.upsert({ roll_one: 4, roll_two: 4, name: 'Margar'}),
   NameValues.upsert({ roll_one: 4, roll_two: 5, name: 'Merkari'}),
   NameValues.upsert({ roll_one: 4, roll_two: 6, name: 'Nagl'}),
   NameValues.upsert({ roll_one: 4, roll_two: 7, name: 'Niduk'}),
   NameValues.upsert({ roll_one: 4, roll_two: 8, name: 'Nifehl'}),
   NameValues.upsert({ roll_one: 5, roll_two: 1, name: 'Prügl'}),
   NameValues.upsert({ roll_one: 5, roll_two: 2, name: 'Qillnach'}),
   NameValues.upsert({ roll_one: 5, roll_two: 3, name: 'Risten'}),
   NameValues.upsert({ roll_one: 5, roll_two: 4, name: 'Svind'}),
   NameValues.upsert({ roll_one: 5, roll_two: 5, name: 'Theras'}),
   NameValues.upsert({ roll_one: 5, roll_two: 6, name: 'Therg'}),
   NameValues.upsert({ roll_one: 5, roll_two: 7, name: 'Torvul'}),
   NameValues.upsert({ roll_one: 5, roll_two: 8, name: 'Törn'}),
   NameValues.upsert({ roll_one: 6, roll_two: 1, name: 'Urm'}),
   NameValues.upsert({ roll_one: 6, roll_two: 2, name: 'Urvarg'}),
   NameValues.upsert({ roll_one: 6, roll_two: 3, name: 'Vagal'}),
   NameValues.upsert({ roll_one: 6, roll_two: 4, name: 'Vatan'}),
   NameValues.upsert({ roll_one: 6, roll_two: 5, name: 'Von'}),
   NameValues.upsert({ roll_one: 6, roll_two: 6, name: 'Vrakh'}),
   NameValues.upsert({ roll_one: 6, roll_two: 7, name: 'Vresi'}),
   NameValues.upsert({ roll_one: 6, roll_two: 8, name: 'Wemut'}),

   
   
	];
	await Promise.all(seedVals);
	console.log('Database synced');
	sequelize.close();
}).catch(console.error);
